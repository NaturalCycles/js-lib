// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`array items with invalid props 1`] = `
{
  "joiValidationErrorItems": [
    {
      "context": {
        "key": "a1",
        "label": "a[0].a1",
        "value": 5,
      },
      "message": ""a[0].a1" must be a string",
      "path": [
        "a",
        0,
        "a1",
      ],
      "type": "string.base",
    },
  ],
}
`;

exports[`array with invalid items 1`] = `
{
  "joiValidationErrorItems": [
    {
      "context": {
        "key": 1,
        "label": "a[1]",
        "type": "object",
        "value": "",
      },
      "message": ""a[1]" must be of type object",
      "path": [
        "a",
        1,
      ],
      "type": "object.base",
    },
  ],
}
`;

exports[`error should contain errorItems 1`] = `
{
  "joiValidationErrorItems": [
    {
      "context": {
        "encoding": undefined,
        "key": "a2",
        "label": "a2",
        "limit": 2,
        "value": "a",
      },
      "message": ""a2" length must be at least 2 characters long",
      "path": [
        "a2",
      ],
      "type": "string.min",
    },
  ],
  "joiValidationObjectName": "objName",
}
`;

exports[`getValidationResult should still convert 1`] = `
[JoiValidationError: Invalid objName
{
  "a1": " ff ",
  "a2" [1]: "a"
}

[1] "a2" length must be at least 2 characters long]
`;

exports[`long message string 1`] = `
""[0].a1" must be a string
"[1].a1" must be a string
"[2].a1" must be a string
"[3].a1" must be a string
"[4].a1" must be a string
... 1000 errors in total

[
  {
    "a1" [1, 10, 100, 1000, 101, 102, 103, 104, 105, 106, 107, 108, 109, 11, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 12, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 13, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 14, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 15, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 16, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 17, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 18, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 19, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 2, 20, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 21, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 22, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 23, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 24, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 25, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 26, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 27, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 28, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 29, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 3, 30, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 31, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 32, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 33, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 34, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 35, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 36, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 37, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 38, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 39, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 4, 40, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 41, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 42, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 43, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 44, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 45, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 46, 4
... 43.6 Kb message truncated ...
 a string
[943] "[942].a1" must be a string
[944] "[943].a1" must be a string
[945] "[944].a1" must be a string
[946] "[945].a1" must be a string
[947] "[946].a1" must be a string
[948] "[947].a1" must be a string
[949] "[948].a1" must be a string
[950] "[949].a1" must be a string
[951] "[950].a1" must be a string
[952] "[951].a1" must be a string
[953] "[952].a1" must be a string
[954] "[953].a1" must be a string
[955] "[954].a1" must be a string
[956] "[955].a1" must be a string
[957] "[956].a1" must be a string
[958] "[957].a1" must be a string
[959] "[958].a1" must be a string
[960] "[959].a1" must be a string
[961] "[960].a1" must be a string
[962] "[961].a1" must be a string
[963] "[962].a1" must be a string
[964] "[963].a1" must be a string
[965] "[964].a1" must be a string
[966] "[965].a1" must be a string
[967] "[966].a1" must be a string
[968] "[967].a1" must be a string
[969] "[968].a1" must be a string
[970] "[969].a1" must be a string
[971] "[970].a1" must be a string
[972] "[971].a1" must be a string
[973] "[972].a1" must be a string
[974] "[973].a1" must be a string
[975] "[974].a1" must be a string
[976] "[975].a1" must be a string
[977] "[976].a1" must be a string
[978] "[977].a1" must be a string
[979] "[978].a1" must be a string
[980] "[979].a1" must be a string
[981] "[980].a1" must be a string
[982] "[981].a1" must be a string
[983] "[982].a1" must be a string
[984] "[983].a1" must be a string
[985] "[984].a1" must be a string
[986] "[985].a1" must be a string
[987] "[986].a1" must be a string
[988] "[987].a1" must be a string
[989] "[988].a1" must be a string
[990] "[989].a1" must be a string
[991] "[990].a1" must be a string
[992] "[991].a1" must be a string
[993] "[992].a1" must be a string
[994] "[993].a1" must be a string
[995] "[994].a1" must be a string
[996] "[995].a1" must be a string
[997] "[996].a1" must be a string
[998] "[997].a1" must be a string
[999] "[998].a1" must be a string
[1000] "[999].a1" must be a string"
`;

exports[`should fail on invalid values 1`] = `[JoiValidationError: "value" is required]`;

exports[`should fail on invalid values 2`] = `[JoiValidationError: "value" must be of type object]`;

exports[`should fail on invalid values 3`] = `[JoiValidationError: "value" must be of type object]`;

exports[`should fail on invalid values 4`] = `[JoiValidationError: "value" must be of type object]`;

exports[`should fail on invalid values 5`] = `[JoiValidationError: "value" must be of type object]`;

exports[`should fail on invalid values 6`] = `[JoiValidationError: "value" must be of type object]`;

exports[`should fail on invalid values 7`] = `
[JoiValidationError: {
  "a1" [1]: "a"
}

[1] "a1" length must be at least 2 characters long]
`;

exports[`should fail on invalid values 8`] = `
[JoiValidationError: {
  "a1" [1]: "a12345"
}

[1] "a1" length must be less than or equal to 5 characters long]
`;

exports[`should include id in the error message 1`] = `
"Invalid Object.someId
{
  "id": "someId",
  "a1" [1]: -- missing --
}

[1] "a1" is required"
`;

exports[`should include id in the error message 2`] = `
{
  "joiValidationErrorItems": [
    {
      "context": {
        "key": "a1",
        "label": "a1",
      },
      "message": ""a1" is required",
      "path": [
        "a1",
      ],
      "type": "any.required",
    },
  ],
  "joiValidationObjectId": "someId",
  "joiValidationObjectName": "Object",
}
`;

exports[`should include id in the error message 3`] = `
"Invalid ObjName.someId
{
  "id": "someId",
  "a1" [1]: -- missing --
}

[1] "a1" is required"
`;

exports[`should include id in the error message 4`] = `
{
  "joiValidationErrorItems": [
    {
      "context": {
        "key": "a1",
        "label": "a1",
      },
      "message": ""a1" is required",
      "path": [
        "a1",
      ],
      "type": "any.required",
    },
  ],
  "joiValidationObjectId": "someId",
  "joiValidationObjectName": "ObjName",
}
`;

exports[`should include id in the error message 5`] = `
"Invalid Obj1.someId
{
  "id": "someId",
  "a1" [1]: -- missing --
}

[1] "a1" is required"
`;

exports[`should include id in the error message 6`] = `
{
  "joiValidationErrorItems": [
    {
      "context": {
        "key": "a1",
        "label": "a1",
      },
      "message": ""a1" is required",
      "path": [
        "a1",
      ],
      "type": "any.required",
    },
  ],
  "joiValidationObjectId": "someId",
  "joiValidationObjectName": "Obj1",
}
`;
