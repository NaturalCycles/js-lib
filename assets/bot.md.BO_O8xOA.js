var d=Object.defineProperty;var g=(s,e,t)=>e in s?d(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t;var n=(s,e,t)=>g(s,typeof e!="symbol"?e+"":e,t);import{i as p}from"./chunks/env.BUzbqU-4.js";import{C as k,c as u,o as f,j as l,ae as D,a as h,G as b,t as r,k as o}from"./chunks/framework.Xbv-JOCv.js";const m=/bot|spider|crawl|headless|electron|phantom|slimer|proximic|cincraw|slurp|MicrosoftPreview|ahrefs|preview|lighthouse|facebookexternal|pinterest|screaming|apis-google|duplexweb-google|feedfetcher-google|google-read-aloud|googleweblight|mediapartners-google/i;class E{constructor(e={}){n(this,"cfg");n(this,"botReason");n(this,"cdp");this.cfg=e}isBotOrCDP(){return!!this.getBotReason()||this.isCDP()}isBot(){return!!this.getBotReason()}getBotReason(){return this.cfg.enabled===!1?null:this.cfg.memoizeResults&&this.botReason!==void 0?this.botReason:(this.botReason=this.detectBotReason(),this.botReason)}detectBotReason(){if(p())return null;const{navigator:e}=globalThis;if(!e)return a.NoNavigator;const{userAgent:t}=e;return t?m.test(t)?a.UserAgent:e.webdriver?a.WebDriver:e.languages===""?a.EmptyLanguages:this.cfg.treatCDPAsBotReason&&this.isCDP()?a.CDP:null:a.NoUserAgent}isCDP(){return this.cfg.enabled===!1?!1:this.cfg.memoizeResults&&this.cdp!==void 0?this.cdp:(this.cdp=this.detectCDP(),this.cdp)}detectCDP(){if(p())return!1;let e=!1;try{const t=new window.Error;window.Object.defineProperty(t,"stack",{configurable:!1,enumerable:!1,get:function(){return e=!0,""}}),window.console.debug(t)}catch{}return e}}var a;(function(s){s[s.NoNavigator=1]="NoNavigator",s[s.NoUserAgent=2]="NoUserAgent",s[s.UserAgent=3]="UserAgent",s[s.WebDriver=4]="WebDriver",s[s.EmptyLanguages=6]="EmptyLanguages",s[s.CDP=8]="CDP"})(a||(a={}));const v={id:"botdetectionservice",tabindex:"-1"},P=JSON.parse('{"title":"BotDetectionService","description":"","frontmatter":{},"headers":[],"relativePath":"bot.md","filePath":"bot.md"}'),y={name:"bot.md"},_=Object.assign(y,{setup(s){const e=new E;return(t,i)=>{const c=k("Badge");return f(),u("div",null,[l("h1",v,[i[0]||(i[0]=h("BotDetectionService ")),b(c,{text:"experimental",type:"warning"}),i[1]||(i[1]=h()),i[2]||(i[2]=l("a",{class:"header-anchor",href:"#botdetectionservice","aria-label":'Permalink to "BotDetectionService <Badge text="experimental" type="warning"/>"'},"​",-1))]),i[3]||(i[3]=D(`<p>Allows to detect simple (non-sophisticated) bots.</p><p>Example usage:</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { BotDetectionService } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@naturalcycles/js-lib&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> botDetectionService</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> BotDetectionService</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">botDetectionService.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isBot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true/false</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">botDetectionService.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isCDP</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true/false</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">botDetectionService.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getBotReason</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// BotReason enum</span></span></code></pre></div><h2 id="demo" tabindex="-1">Demo <a class="header-anchor" href="#demo" aria-label="Permalink to &quot;Demo&quot;">​</a></h2>`,4)),l("pre",null,"isBot: "+r(o(e).isBot())+`
isCDP: `+r(o(e).isCDP())+`
isBotOrCDP: `+r(o(e).isBotOrCDP())+`
botReason: `+r(o(e).getBotReason()||"null")+`
`,1)])}}});export{P as __pageData,_ as default};
