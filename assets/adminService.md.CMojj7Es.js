var S=Object.defineProperty;var C=(t,e,i)=>e in t?S(t,e,{enumerable:!0,configurable:!0,writable:!0,value:i}):t[e]=i;var h=(t,e,i)=>C(t,typeof e!="symbol"?e+"":e,i);import{_ as D}from"./chunks/assert.BQv4eVmx.js";import{_ as x}from"./chunks/types.C-9dMxxX.js";import{_ as M}from"./chunks/is.util.NvFMntWM.js";import{i as g}from"./chunks/env.BUzbqU-4.js";import{_ as A}from"./chunks/stringify.9Pemjmk0.js";import{d as R,v as w,C as B,c as L,o as T,j as m,ae as O,G as E,a as y}from"./chunks/framework.Xbv-JOCv.js";function P(t,e,i,n){var o=arguments.length,s=o<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,i):n,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")s=Reflect.decorate(t,e,i,n);else for(var d=t.length-1;d>=0;d--)(a=t[d])&&(s=(o<3?a(s):o>3?a(e,i,s):a(e,i))||s);return o>3&&s&&Object.defineProperty(e,i,s),s}function V(t,e){return`${t.constructor.name}.${e}`}const N=t=>{if(t.length!==0)return t.length===1&&M(t[0])?t[0]:JSON.stringify(t)};class j{constructor(){h(this,"m",new Map)}has(e){return this.m.has(e)}get(e){return this.m.get(e)}set(e,i){this.m.set(e,i)}clear(){this.m.clear()}}const I=(t={})=>(e,i,n)=>{D(n.value,"function","Memoization can be applied only to methods");const o=n.value,s=new Map,{logger:a=console,cacheFactory:d=()=>new j,cacheKeyFn:_=N}=t,v=String(i),F=V(e,v);return n.value=function(...r){const p=this,c=_(r);let l=s.get(p);if(l||(l=d(),s.set(p,l)),l.has(c))return l.get(c);const k=o.apply(p,r);try{l.set(c,k)}catch(b){a.error(b)}return k},x(n.value,{clear:()=>{a.log(`${F} @_Memo.clear()`),s.forEach(r=>r.clear()),s.clear()},getInstanceCache:()=>s,getCache:r=>s.get(r)}),n},K="__red-dot__",u=()=>{};class f{constructor(e){h(this,"cfg");h(this,"adminMode",!1);h(this,"listening",!1);this.cfg={predicate:i=>i.ctrlKey&&i.key==="L",persistToLocalStorage:!0,localStorageKey:"__adminMode__",onRedDotClick:u,onChange:u,beforeEnter:()=>!0,beforeExit:()=>!0,...e}}startListening(){this.listening||g()||(this.adminMode=!!localStorage.getItem(this.cfg.localStorageKey),this.adminMode&&this.toggleRedDotVisibility(),document.addEventListener("keydown",this.keydownListener.bind(this),{passive:!0}),this.listening=!0)}stopListening(){g()||(document.removeEventListener("keydown",this.keydownListener),this.listening=!1)}async keydownListener(e){this.cfg.predicate(e)&&await this.toggleRedDot()}async toggleRedDot(){try{if(!await this.cfg[this.adminMode?"beforeExit":"beforeEnter"]())return}catch(e){console.error(e),alert(A(e));return}if(this.adminMode=!this.adminMode,this.toggleRedDotVisibility(),this.cfg.persistToLocalStorage){const{localStorageKey:e}=this.cfg;this.adminMode?localStorage.setItem(e,"1"):localStorage.removeItem(e)}this.cfg.onChange(this.adminMode)}toggleRedDotVisibility(){this.getRedDotElement().style.display=this.adminMode?"block":"none"}getRedDotElement(){const e=document.createElement("div");return e.id=K,e.style.cssText="position:fixed;width:24px;height:24px;margin-top:-12px;background-color:red;opacity:0.5;top:50%;left:0;z-index:9999999;cursor:pointer;border-radius:0 3px 3px 0",e.addEventListener("click",()=>this.cfg.onRedDotClick()),document.body.append(e),e}}P([I()],f.prototype,"getRedDotElement",null);const z=R({__name:"AdminModeDemo",setup(t){const e=new f({onChange:i=>console.log({adminMode:i}),onRedDotClick:()=>alert("RedDot clicked")});return w(()=>{e.startListening()}),(i,n)=>null}}),$={id:"adminservice",tabindex:"-1"},Y=JSON.parse('{"title":"AdminService","description":"","frontmatter":{},"headers":[],"relativePath":"adminService.md","filePath":"adminService.md"}'),q={name:"adminService.md"},Z=Object.assign(q,{setup(t){return(e,i)=>{const n=B("Badge");return T(),L("div",null,[m("h1",$,[i[0]||(i[0]=y("AdminService ")),E(n,{text:"experimental",type:"warning"}),i[1]||(i[1]=y()),i[2]||(i[2]=m("a",{class:"header-anchor",href:"#adminservice","aria-label":'Permalink to "AdminService <Badge text="experimental" type="warning"/>"'},"​",-1))]),i[3]||(i[3]=O(`<h2 id="admin-mode" tabindex="-1">Admin Mode <a class="header-anchor" href="#admin-mode" aria-label="Permalink to &quot;Admin Mode&quot;">​</a></h2><p>Admin mode is activated by a combination of keys on a keyboard (no mobile support), visualized with the RedDot™ on the page.</p><p>Function <code>startListening()</code> enables listening for a key combination (Ctrl+Shift+L by default).</p><p>Example:</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> admin</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> AdminService</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  onEnter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Entered Admin mode&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  onExit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Exited Admin mode&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  onRedDotClick</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> alert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;RedDot clicked&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">admin.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">startListening</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p>Try pressing <code>Ctrl+Shift+L</code> on the keyboard to see the RedDot™ in action.</p>`,6)),E(z)])}}});export{Y as __pageData,Z as default};
